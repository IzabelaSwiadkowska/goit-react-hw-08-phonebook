{"version":3,"file":"static/js/28.99e9f8ba.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/icons/src/Delete.tsx","../node_modules/@chakra-ui/icon/src/create-icon.tsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    const enterContacts = contacts.some(\n      contact =>\n        contact.name.toLowerCase().trim() === name.toLowerCase().trim() ||\n        contact.number.trim() === number.trim()\n    );\n    enterContacts\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(contact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <FormControl\n        as=\"form\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={{ base: '300px', md: '700px', lg: '768px' }}\n        m={4}\n        onSubmit={handleSubmit}\n      >\n        <FormLabel fontSize={{ base: '20px', md: '25px', lg: '30px' }}>\n          Name\n          <Input\n            mb=\"4\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChangeName}\n            focusBorderColor=\"teal.600\"\n            fontSize={{ base: '15px', md: '20px', lg: '25px' }}\n            w={{ base: '300px', md: '700px', lg: '768px' }}\n          />\n        </FormLabel>\n        <FormLabel fontSize={{ base: '20px', md: '25px', lg: '30px' }}>\n          Number\n          <Input\n            mb=\"4\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleChangeNumber}\n            focusBorderColor=\"teal.600\"\n            fontSize={{ base: '15px', md: '20px', lg: '25px' }}\n            w={{ base: '300px', md: '700px', lg: '768px' }}\n          />\n        </FormLabel>\n        <Button\n          type=\"submit\"\n          size={{ base: 'md', lg: 'lg' }}\n          bg=\"teal.400\"\n          color=\"white\"\n          borderRadius=\"10px\"\n          _hover={{\n            bgColor: 'teal.500',\n            color: 'white',\n            transform: 'scale(1.1)',\n            border: '1px solid white',\n          }}\n        >\n          Add contact\n        </Button>\n      </FormControl>\n    </Box>\n  );\n};\nexport default ContactForm;\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" />\n    </g>\n  ),\n})\n","import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter, getIsLoading } from 'redux/contacts/selectors';\nimport { Box, Button, Text } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      {isLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        <Box w={{ base: '280px', md: '600px' }}>\n          {visibleContacts.length > 0 ? (\n            visibleContacts.map((contact, id) => (\n              <Box\n                key={id}\n                p=\"10px\"\n                fontSize={{ base: '18px', md: '25px', lg: '32px' }}\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                color=\"white\"\n              >\n                {contact.name}: {contact.number}\n                <Button\n                  size={{ base: 'sm', sm: 'sm', lg: 'lg' }}\n                  bgColor=\"teal.400\"\n                  type=\"button\"\n                  ml=\"20px\"\n                  onClick={() => handleDelete(contact.id)}\n                  _hover={{\n                    bgColor: 'teal.500',\n                    color: 'white',\n                    transform: 'scale(1.1)',\n                    border: '1px solid white',\n                  }}\n                >\n                  {<DeleteIcon color=\"white\" />}\n                </Button>\n              </Box>\n            ))\n          ) : (\n            <Text\n              color=\"white\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              fontSize={{ base: '18px', md: '25px', lg: '32px' }}\n            >\n              No contacts found\n            </Text>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Input, FormControl, FormLabel, Box } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <FormControl\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={{ base: '300px', md: '700px', lg: '768px' }}\n        m={4}\n      >\n        <FormLabel m=\"10px\" fontSize={{ base: '20px', md: '25px', lg: '30px' }}>\n          Find contacts by Name{' '}\n        </FormLabel>\n        <Input\n          fontSize={{ base: '15px', md: '20px', lg: '25px' }}\n          focusBorderColor=\"teal.600\"\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FormControl>\n    </Box>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from '@chakra-ui/react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <Box>{isLoading && 'Request in progress...'}</Box>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </Box>\n  );\n};\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","_jsx","Box","display","justifyContent","children","_jsxs","FormControl","as","flexDirection","alignItems","w","base","md","lg","m","onSubmit","event","preventDefault","contact","enterContacts","some","toLowerCase","trim","alert","concat","addContact","FormLabel","fontSize","Input","mb","type","pattern","title","required","placeholder","value","onChange","e","target","focusBorderColor","Button","size","bg","color","borderRadius","_hover","bgColor","transform","border","DeleteIcon","options","_options$viewBox","viewBox","pathDefinition","d","displayName","_options$defaultProps","defaultProps","path","Children","Comp","forwardRef","props","ref","jsx","Icon","_objectSpread","length","fill","createIcon","visibleContacts","includes","getVisibleContacts","Text","map","id","p","sm","ml","onClick","delContact","handleDelete","setFilter","useEffect","fetchContacts","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}